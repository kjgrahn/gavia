#!/usr/bin/perl -w # -*- perl -*-
#
# $Id: gavia_gab2roff,v 1.9 2007-06-25 08:01:32 grahn Exp $
# $Name:  $
#
# gavia_gab2text - transform gab (see gavia(5)) formatted excursions
# to roff (groff, nroff, troff) source
#
# Copyright (c) 2002, 2007 Jörgen Grahn
# All rights reserved.
#

use strict;
use POSIX;

my $commentw = 60;
my $have_latin1 = 1;

my $hdrs = "place|date|time|observers|weather|comments";

print <<EOF;
.\" generated by $0
.\"
EOF

while(<>) {

    chomp;
    s/^\s+//;

    next if /^$/;
    next if /^\#/;

    if(/^(date)\s*:\s*(.*)/i) {
	# special treatment for the date field
	my $head = $1;
	my ($date, $wday) = mkdate($2);
	$_ = "$head: $date ($wday)";
	# fallthrough
    }

    if(/^($hdrs)\s*:\s*(.*)/io) {
	printf("%s\tT{\n%s\nT}\n", $1, quote($2));
	next;
    }

    if(/^{/) {
	print ".TS\n";
	print "| ri s | lw$commentw |.\n";
	print "_\n";
	next;
    }

    if(/^}{/) {
	print "_\n";
	print ".T&\n";
	print "| ri | r | l |.\n";
	next;
    }

    if(/^}/) {
	print "_\n";
	print ".TE\n";
	print ".sp\n";
	next;
    }

    if(/^(.+?)\s*:.*?:\s*(\d*)\s*:\s*(.*)/) {
	printf("%s\t%s\tT{\n%s\nT}\n",
	       quote($1),
	       $2,
	       quote($3));
	next;
    }

    print STDERR "gavia_gab2roff: funny stuff on line $.: $_\n";
}

exit 0;

sub quote {
    my $s = shift;

    $s =~ s|\\|\\(bs|g;
    $s =~ s|\t| |g;

    $s =~ s|\"|''|g;
    $s =~ s|---|\\(em|g;
    $s =~ s|--|\\(en|g;
    $s =~ s|×|\\(mu|g;

    return $s if $have_latin1;

    $s =~ s|é|\\('e|g;
    # '
    $s =~ s|ä|\\(:a|g;
    $s =~ s|Ä|\\(:A|g;
    $s =~ s|ö|\\(:o|g;
    $s =~ s|Ö|\\(:O|g;
    $s =~ s|å|\\(oa|g;
    $s =~ s|Å|\\(oA|g;

    return $s;
}

# Given a date on the format 'yyyymmdd',
# return it converted to ISO format and
# also return its day-of-week.
#
sub mkdate {
    my $date = shift;

    $date =~ s/(\d{4})(\d{2})(\d{2})/$1-$2-$3/
	or
	    die "gavia_gab2roff: broken date at line $.: $2\n";

    my @t = gmtime(POSIX::mktime(0, 0, 12, $3, $2-1, $1-1900));
    my @days = ("Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat");
    my $wday = $days[$t[6]];

    return ($date, $wday);
}
