#!/usr/bin/perl -w
#
# $Id: gavia_gab2html,v 1.11 2007-06-25 07:54:19 grahn Exp $
# $Name:  $
#
# gavia_gab2html - transform gab (see gavia(5)) formatted excursions
# to HTML.
#
# Copyright (c) 2002, 2006, 2007 Jörgen Grahn
# All rights reserved.
#

use strict;
use POSIX;

my $charset = 'iso-8859-1';

print <<EOF;
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=$charset">
<style type="text/css">
TABLE    { border-collapse: collapse;
	   border: 1px solid lightgray;
           /*width: 100%*/ }
TH       { font-weight: normal }
THEAD    { background-color: \#ffffe0 }
THEAD TH { border: none }
THEAD TD { border: none }
TH,TD    { border: 1px solid lightgray;
           vertical-align: top;
           text-align: left }
TBODY TH+TD { text-align: right }
COL.n     { width: 3em }
COL.sp    { width: 0* }
</style>
<title>Gavia contents</title>
</head>
<body>
EOF

my $hdrs = "place|date|time|observers|weather|comments";

while(<>) {

    chomp;
    s/^\s+//;

    next if /^$/;
    next if /^\s*\#/;

    if(/^(date)\s*:\s*(.*)/i) {
	# special treatment fr the date field
	my $head = $1;
	my ($date, $wday) = mkdate($2);
	printf("<tr class=\"date\"><th>%s<td colspan=\"2\">%s (%s)\n",
	       $head,
	       quote($date),
	       $wday);
	next;
    }

    if(/^($hdrs)\s*:\s*(.*)/i) {
	printf("<tr class=\"%s\"><th>%s<td colspan=\"2\">%s\n",
	       $1,
	       $1,
	       quote($2));
	next;
    }

    if(/^{/) {
	print "\n<p><table>\n";
	print "<col class=\"sp\"><col class=\"n\"><col class=\"comment\">\n";
	print "<thead>\n";
	next;
    }

    if(/^}{/) {
	print "<tbody>\n";
	next;
    }

    if(/^}/) {
	print "</table>\n";
	next;
    }

    if(/^(.+?)\s*:.*?:\s*(\d*)\s*:\s*(.*)/) {
	printf("<tr><th>%s\n<td>%s<td>%s\n",
	       $1,
	       $2,
	       quote($3));
	next;
    }

    print STDERR "gavia_gab2html: funny stuff on line $.: $_\n";
}

print <<EOF;
<hr>
</body>
</html>
EOF

exit 0;


sub quote {
    my $s = shift;

    $s =~ s|&|&amp;|g;
    $s =~ s|<|&lt;|g;
    $s =~ s|>|&gt;|g;

    $s =~ s|---|&mdash;|g;
    $s =~ s|--|&ndash;|g;

    return $s;
}


# Given a date on the format 'yyyymmdd',
# return it converted to ISO format and
# also return its day-of-week.
#
sub mkdate {
    my $date = shift;

    $date =~ s/(\d{4})(\d{2})(\d{2})/$1-$2-$3/
	or
	    die "gavia_gab2html: broken date at line $.: $2\n";

    my @t = gmtime(POSIX::mktime(0, 0, 12, $3, $2-1, $1-1900));
    my @days = ("Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat");
    my $wday = $days[$t[6]];

    return ($date, $wday);
}
