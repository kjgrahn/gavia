#!/usr/bin/perl -w # -*- perl -*-
#
# $Id: gavia_gab2text,v 1.7 2007-06-25 08:00:47 grahn Exp $
# $Name:  $
#
# gavia_gab2text - transform gab (see gavia(5)) formatted excursions
# to plain text
#
# Copyright (c) 2002, 2007 Jörgen Grahn
# All rights reserved.
#

use strict;
use POSIX;

my $hdrs = "place|date|time|observers|weather|comments";

while(<>) {

    chomp;
    s/^\s+//;

    next if /^$/;
    next if /^\s*\#/;
    next if /^}\s*$/;

    if(/^(date)\s*:\s*(.+)/i) {
	# special treatment fr the date field
	my $head = $1;
	my ($date, $wday) = mkdate($2);
	bprint(sprintf("%-9s: %s (%s)\n", $head, $date, $wday));
	next;
    }

    if(/^($hdrs)\s*:\s*(.*)/io) {
	bprint(sprintf("%-9s: %s\n", $1, $2));
	next;
    }

    if(/^({|}{)/) {
	print "------------------------------\n";
	next;
    }

    if(/^(.+?)\s*:.*?:\s*(\d+)\s*:\s*(.*)/) {
	bprint(sprintf("%s (%d) %s\n", $1, $2, $3));
	next;
    }

    if(/^(.+?)\s*:.*?:.*?:\s*(.*)/) {
	bprint(sprintf("%s %s\n", $1, $2));
	next;
    }

    print STDERR "gavia_gab2text: funny stuff on line $.: $_\n";
}

exit 0;

# Print a long, \n-terminated string,
# while breaking and TAB-indenting it at
# word boundaries.
#
sub bprint {
    my $s = shift;

    while($s =~ s/^(.{60,80})\s+(.{8,})/$2/) {
	print "$1\n\t";
    }
    print $s;
}

# Given a date on the format 'yyyymmdd',
# return it converted to ISO format and
# also return its day-of-week.
#
sub mkdate {
    my $date = shift;

    $date =~ s/(\d{4})(\d{2})(\d{2})/$1-$2-$3/
	or
	    die "gavia_gab2text: broken date at line $.: $2\n";

    my @t = gmtime(POSIX::mktime(0, 0, 12, $3, $2-1, $1-1900));
    my @days = ("Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat");
    my $wday = $days[$t[6]];

    return ($date, $wday);
}
